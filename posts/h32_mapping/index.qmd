---
title: "Neuronexus EEG Probe Mapping"
author: "Ernie Pedapati"
date: "2023-07-07"
categories: [vhtp, mouse, EEG, Neuronexus, probe, mapping]
image: "h32-layout.png"
---

```{r setup, include=FALSE, echo=FALSE}
library(tidyverse)
library(glue)
library(knitr)
library(kableExtra)

```

## Overview

For alignment, here are the exact description of the equipment we are using from our purchase order:

![List of Materials](h32-quote.png)

This protocol describes how to map the location of the Mouse EEG v2 H32 Probe with the OM Amplifier Adapter. For better or worse, like all custom probes mapping must be confirmed manually.

## [Probe Layout](https://neuronexus.com/files/probemapping/32-channel/H32_All_EEG_Maps.pdf)

![Layout of Mouse probe from Neuronexus](h32-layout.png)

Per Neuronexus the recordings are stored in the following format:

> Radiens saves primary time-series data sets (e.g., neural recordings) in a simple, open format.  Each dataset (i.e. recording) is saved in a file set named ‘XDAT’ that consists of three files: (i) flat binary file containing the matrix of all sample values (typical in uV) across the multiple channels, (ii) flat binary file containing all timestamps, (iii) json text file containing enriched metadata.
[link](https://www.neuronexus.com/products/software/radiens#featurestab-6/)

## View the raw signal data using MATLAB

A native MATLAB function is available to import the XDAT dataset. The function is available https://github.com/nzgurel/AllegoProcessing_Matlab/tree/main with an example import script [here](https://github.com/nzgurel/AllegoProcessing_Matlab/blob/main/read_allego_data_20210317.m).

The raw data array can be plotted using the EEGLAB functio eegplot: 

![Raw Data Tracing](h32-rawdata.png){ width=65% }

Here we can see that channels pri_1 and pri_31 are not connected to recording sites. As the naming index starts with 0, following import into MATLAB these will be channels indexes 1 and 32.

## View and export the metata data using MATLAB

We can import metadata from the json file which contains infomation about the probe layout and recording and export it as a CSV file for further analysis.

```matlab
    % MATLAB code to extract metadata from XDAT dataset

    str = fileread([xdat_filename '.xdat.json']);
    jsonData = jsondecode(str);

    % extract metadata for probe mapping
    H32Metadata = jsonData.sapiens_base.biointerface_map;

    % remove non-array fields
    H32Metadata = rmfield(H32Metadata, 'samp_freq');
    H32Metadata = rmfield(H32Metadata, 'sig_units');
    
    % save metadata as CSV
    writetable(struct2table(H32Metadata),'NeuroNexusMouseEEGv2H32_Map.csv');

```
For convenience, I have hosted the resulting CSV file on [github](https://github.com/cincibrainlab/vhtp/blob/main/chanfiles/NeuroNexusMouseEEGv2H32_Map.csv) for futher analysis.

## Examining the Probe Metadata

We will evalute the metadata in R to more easily plot and wrangle the data. First, we will load the CSV file from github and view the first 5 rows of the metadata.

```{r first}
#| echo: TRUE
#| include: TRUE
#| results: 'hide'

# Load CSV file from github

H32Metadata <- read_csv("https://raw.githubusercontent.com/cincibrainlab/vhtp/main/chanfiles/NeuroNexusMouseEEGv2H32_Map.csv", col_types = cols())

# View the first 10 rows of the metadata
tb1 <- H32Metadata %>%
    head(5) %>%
    kable()
```

**Table 1:** Table of XDAT dataset metadata for the Mouse EEG v2 H32 Probe.

```{r tabl1, results='html'}
#| echo: FALSE
#| include: TRUE
tb1
```

## Evaluating the Probe Metadata

The metadata hasa several curosities that suggest using caution before incorporating it into your workflow.

1. The Murine EEG v2 H32 Probe has 30 channels, not 32 (pri_0 to pri_31), as indicated by the metadata.
2. 2D coordinate data is provided for the first 30 channels (pri_0 to pri_29), but not the last two (pri_30 and pri_31).
3. There is no indication that channels pri_1 and pri_31 are not connected to recording sites.

This can be seen more clearly by plotting out the channels and their coordinates on a 2d scatter plot. Indeed, this layout matches the mouse 30 lead layout above.

![Metadata Plot](h32-plotted-layout.png)

This suggests that the metadata has the correct layout information but has not been adjusted foe the two unconnected channels. I don't understand why this is the case, but I wil be reaching out to Neuronexus to confirm and will post their reponse.

## Tracing the Probe electrodes to the amplifier adapter

The probe is connected to the headstage using the [Ometics Amplifier Adapter](https://www.neuronexus.com/files/smartlinkheadstagemapping/SmartLink%20Chronic%2032%20Mapping.pdf) (NPD-36-AA-GS). This connector has 36 ports and 4 guide posts. 

![Amplifier Adapter](h32-adapter.png)

 These layouts are not necessarily easy to find in one place so I have included them stiched together here:

![Amplifier Adapter Pin out](h32-adapter2.png)
 
The Neuronexus EEG Pin Out must be rotated to match the Amplifier Adapter Pin Out. To make it easier to visualize the matching channels, I have added red EEG channel number labels to the Amplifier Adapter Pin Out. Importantly, you can see that the Mouse 30-lead EEG leaves two channels unconnected (pri_1 and pri_31). This now clearly visible in the adapter image. 

Per the documentation the internal reference electrode is connected to R1. This corresponds to the "R" pin adjacent to the "0" pin once you account for the rotation of the pin out.

# Mapping the Probe to the Amplifier Adapter Stage 1

The first step is to create a simple lookup table that disregards all metadata but the amplifier pin out (pri_) and the EEG probe channels (based on the connection).

This mapping will correctly pair each EEG channel to the correct signal entering the amplifier, but will not have the correct 30 lead metadata till after we remove the unconnected channels.

```{r stage1}
#| echo: TRUE
#| include: TRUE

mea_to_hs_map <- c(
  "E1"   = 29,
  "E2"   = 27,
  "E3"   = 25,
  "E4"   = 23,
  "E5"   = 21,
  "E6"   = 19,
  "E7"   = 17,
  "E8"   = 30,
  "E9"   = 28,
  "E10"  = 26,
  "E11"  = 24,
  "E12"  = 22,
  "E13"  = 20,
  "E14"  = 18,
  "E15"  = 16,
  "E16"  = 14,
  "E17"  = 12,
  "E18"  = 10,
  "E19"  = 8,
  "E20"  = 6,
  "E21"  = 4,
  "E22"  = 2,
  "E23"  = 0,
  "E24"  = 15,
  "E25"  = 13,
  "E26"  = 11,
  "E27"  = 9,
  "E28"  = 7,
  "E29"  = 5,
  "E30"  = 3
)

# Create a dataframe from the named list
# convert this to a dataframe
mea_to_hs_map_df <- data.frame(mea_to_hs_map) %>%
  rownames_to_column(var = "mea") %>%
  rename(hs_idx = mea_to_hs_map) %>%
  as_tibble() %>%
  mutate(headset = paste0("pri_", hs_idx)) %>%
  rename(mea_formatted_name = mea,
         og_amplifier_pin = headset,
         amplifier_index = hs_idx)
  
mea_to_hs_map_df %>% head(3) %>% kable()

write_csv(mea_to_hs_map_df, "MouseEEGv2H32_Import_Stage1.csv")

```

The final table has the final formatted MEA channel name (E1 to E30) and the headset channel name (pri_0 to pri_29). The original index (starting with 1) is also included. We will save this file to use in MATLAB during import.

The file can be downloaded [here](MouseEEGv2H32_Import_Stage1.csv).

We can now accurately map which MEA channels correspond to which amplifier channels. The bad channels (pri_1 and pri_31) now make more sense as you can follow the mapping.

### Where is the reference channel?

![Reference Channel Info](h32-reference.png)

As of now, we cannot find data for the reference channel (R1) either in the metadata or from the raw read of the signal data. We will need to reach out to Neuronexus to confirm location of reference channel. Since the reference channel can either by an external wire or an internal channel determined by a physical jumper wire, we would not expect the metadata to contain this information inherently. However, the actual signal data should be present.

[Neuronexus Wiring Information](https://www.neuronexus.com/files/technicalsupportdocuments/EEG-Arrays-Guidline.pdf)

# Mapping the Probe to the Amplifier Adapter Stage 2

Now that the mapping is complete, we can remove the unconnected channels and add the metadata to the mapping. 

As you can see from the manual plot above, pri_0 contains the correct metadata for electrode E1. However, in actuality E1 data is routed through pri_29.

![Alt text](h32-path-of-one.png)

Thus, the metadata is now more accurately used as a lookup table for the probe channel and uncoupled from the amplifier channel. If we assigned the metadata for pri_29 to E1, the location would be incorrect. Let's create a stage2 mapping that has the correct metadata (primarily coordinates) for each electrode.

```{r stage2}

# read metadata csv from github
mea_metadata <- "https://raw.githubusercontent.com/cincibrainlab/vhtp/main/chanfiles/NeuroNexusMouseEEGv2H32_Map.csv"

stage2 <- read_csv(mea_metadata, col_types = cols()) %>%
  filter(sys_chan_idx < 30) %>%
  mutate(mea_formatted_name = paste0("E", sys_chan_idx+1)) %>%
  left_join(mea_to_hs_map_df %>% select(mea_formatted_name,og_amplifier_pin), by = "mea_formatted_name") %>%
  relocate(mea_formatted_name, .after = chan_name) %>%
  relocate(og_amplifier_pin, .after = mea_formatted_name)

stage2 %>% kable()

write_csv(stage2, "MouseEEGv2H32_Import_Stage2.csv")

```

This table will be used to assign metadata to our final channel mapping and can be downloaded [here](MouseEEGv2H32_Import_Stage2.csv).

This import process has been now incorporated into our [vHTP import utility](https://cincibrainlab.github.io/devblog/posts/htpimport/).

We'll also post any updates from Neuronexus regarding this process and finding the reference channel.